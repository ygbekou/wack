CREATE TABLE COMPANY (
  	COMPANY_ID TINYINT NOT NULL AUTO_INCREMENT
  , NAME VARCHAR(50)
  , LANGUAGE VARCHAR(20) 
  , DESCRIPTION VARCHAR(1000)
  , META_KEYWORD VARCHAR(1000)
  , META_DESCRIPTION VARCHAR(1000)
  , ADDRESS VARCHAR(64) NOT NULL
  , EMAIL VARCHAR(64) NOT NULL
  , PHONE VARCHAR(20)
  , PHONE2 VARCHAR(20)
  , FAX VARCHAR(20)
  , LOGO VARCHAR(250)
  , FAVICON VARCHAR(250)
  , BACKGROUND_SLIDER VARCHAR(250)
  , BANNER_CONTENT_HEADER VARCHAR(2000)
  , BANNER_CONTENT_PARAGRAPH VARCHAR(250)
  , COPYRIGHT VARCHAR(250)
  , TWITTER_API VARCHAR(250)
  , GOOGLE_MAP VARCHAR(1000)
  , FACEBOOK_URL VARCHAR(250)
  , TWITTER_URL VARCHAR(250)
  , INSTAGRAM_URL VARCHAR(250)
  , FOOTER_PARAGRAPH1 VARCHAR(250)
  , FOOTER_PARAGRAPH2 VARCHAR(250)
  , FOOTER_PARAGRAPH3 VARCHAR(250)
  , FROM_EMAIL VARCHAR(100) NOT NULL
  , TO_EMAIL VARCHAR(100) NOT NULL
  , CREATE_DATE TIMESTAMP NOT NULL DEFAULT NOW()
  , MOD_DATE TIMESTAMP NOT NULL DEFAULT NOW()
  , MOD_BY BIGINT NOT NULL DEFAULT 1
  , STATUS SMALLINT DEFAULT 0
  , PRIMARY KEY (COMPANY_ID)
);


CREATE TABLE USER_GROUP (
  USER_GROUP_ID BIGINT NOT NULL AUTO_INCREMENT
  , NAME VARCHAR(64) NOT NULL
  , PERMISSION TEXT
  , CREATE_DATE TIMESTAMP NOT NULL DEFAULT NOW()
  , MOD_DATE TIMESTAMP NOT NULL DEFAULT NOW()
  , MOD_BY BIGINT NOT NULL DEFAULT 1,
  
  PRIMARY KEY (USER_GROUP_ID)
);


CREATE TABLE USERS (
       USER_ID BIGINT NOT NULL AUTO_INCREMENT 
     , USER_GROUP_ID BIGINT NOT NULL 
     , USER_NAME VARCHAR(100)
     , PASSWORD VARCHAR(100) NOT NULL DEFAULT '1234'
     , FIRST_NAME VARCHAR(50) NOT NULL
     , LAST_NAME VARCHAR(50) NOT NULL
     , MIDDLE_NAME VARCHAR(50) 
     , PICTURE VARCHAR(150) DEFAULT 'user.jpg'  
     , EMAIL VARCHAR(100)
     , CURRENT_LOCALE VARCHAR(10)
     , CREATE_DATE TIMESTAMP NOT NULL DEFAULT NOW()
     , MOD_DATE TIMESTAMP NOT NULL  
     , BIRTH_DATE DATE
     , SEX CHAR(1) NOT NULL   
     , MOD_BY BIGINT NOT NULL DEFAULT 1
     , HOME_PHONE VARCHAR(20)
     , MOBILE_PHONE VARCHAR(20)
     , ADDRESS TEXT
     , CITY VARCHAR(150) 
     , COUNTRY VARCHAR(150) 
     , COUNTRY_ID BIGINT DEFAULT 215
     , ZIP_CODE  VARCHAR(10) 
     , FIRST_TIME_LOGIN VARCHAR(1) DEFAULT 'Y'
     , STATUS SMALLINT DEFAULT 0
     , PRIMARY KEY (USER_ID) 
     , CONSTRAINT FK_USER_1 FOREIGN KEY (USER_GROUP_ID)
                  REFERENCES USER_GROUP (USER_GROUP_ID)
); 
ALTER TABLE USERS MODIFY COLUMN STATUS SMALLINT DEFAULT 1
      COMMENT '0-Pending Approval, 1- Approved/Active, 2- Rejected, 3- Inactive/Deactivated';
CREATE UNIQUE INDEX UNIQUE_USER ON USERS (EMAIL ASC);
CREATE UNIQUE INDEX UNIQUE_USER_NAME ON USERS (USER_NAME ASC);
  

CREATE TABLE SECTION (
	   SECTION_ID BIGINT NOT NULL AUTO_INCREMENT
	 , NAME VARCHAR(20) NOT NULL
	 , TITLE VARCHAR(20) NOT NULL
	 , DESCRIPTION VARCHAR(1000) NOT NULL
	 , PICTURE VARCHAR(150)
	 , LANGUAGE VARCHAR(20) 
	 , STATUS SMALLINT DEFAULT 0
     , SHOW_IN_MENU VARCHAR(1) DEFAULT 'N'
	 , CREATE_DATE TIMESTAMP NOT NULL
     , MOD_DATE TIMESTAMP NOT NULL
     , MOD_BY BIGINT NOT NULL
	 , PRIMARY KEY (SECTION_ID)
);


CREATE TABLE SECTION_ITEM (
	   SECTION_ITEM_ID BIGINT NOT NULL AUTO_INCREMENT
	 , SECTION_ID BIGINT NOT NULL
	 , TITLE VARCHAR(50) NOT NULL
	 , DESCRIPTION VARCHAR(1000) NOT NULL
	 , PICTURE VARCHAR(150)
	 , LANGUAGE VARCHAR(20) 
	 , STATUS SMALLINT DEFAULT 0
	 , SHOW_IN_MENU VARCHAR(1) DEFAULT 'N'
	 , CREATE_DATE TIMESTAMP NOT NULL
     , MOD_DATE TIMESTAMP NOT NULL
     , MOD_BY BIGINT NOT NULL
	 , PRIMARY KEY (SECTION_ITEM_ID)
	 , CONSTRAINT FK_SECTION_ITEM_1 FOREIGN KEY (SECTION_ID)
                  REFERENCES SECTION (SECTION_ID)
);


CREATE TABLE EMPLOYEE (
       EMPLOYEE_ID BIGINT NOT NULL AUTO_INCREMENT 
     , USER_ID BIGINT NOT NULL 
     , DESIGNATION VARCHAR(100)
     , RESUME TEXT
     , CREATE_DATE TIMESTAMP NOT NULL DEFAULT NOW()
	 , MOD_DATE TIMESTAMP NOT NULL DEFAULT NOW()
	 , MOD_BY BIGINT NOT NULL DEFAULT 1
	 , MANAGING SMALLINT DEFAULT 1
	 , STATUS SMALLINT DEFAULT 0
     , PRIMARY KEY (EMPLOYEE_ID)
     , CONSTRAINT FK_EMPLOYEE_1 FOREIGN KEY (USER_ID)
                  REFERENCES USERS (USER_ID)
);


CREATE TABLE CONTACT_US_MESSAGE (
       CONTACTUS_MESSAGE_ID BIGINT NOT NULL AUTO_INCREMENT 
     , NAME VARCHAR(100) NOT NULL
     , EMAIL VARCHAR(50) NOT NULL
     , PHONE VARCHAR(50)
     , MESSAGE TEXT NOT NULL
     , WAS_READ SMALLINT DEFAULT 0
     , CREATE_DATE TIMESTAMP NOT NULL DEFAULT NOW()
	 , MOD_DATE TIMESTAMP NOT NULL DEFAULT NOW()
	 , MOD_BY BIGINT NOT NULL DEFAULT 1
     , PRIMARY KEY (CONTACTUS_MESSAGE_ID)
);

CREATE TABLE SLIDER (
	   SLIDER_ID BIGINT NOT NULL AUTO_INCREMENT
	 , NAME VARCHAR(20) NOT NULL
	 , PICTURE VARCHAR(150)
	 , CREATE_DATE TIMESTAMP NOT NULL
     , MOD_DATE TIMESTAMP NOT NULL
     , MOD_BY BIGINT NOT NULL
	 , PRIMARY KEY (SLIDER_ID)
);

CREATE TABLE SLIDER_TEXT (
	   SLIDER_TEXT_ID BIGINT NOT NULL AUTO_INCREMENT
	 , SLIDER_ID BIGINT NOT NULL
	 , TEXT1 VARCHAR(50) 
	 , TEXT2 VARCHAR(50) 
	 , TEXT3 VARCHAR(50)
	 , LANGUAGE VARCHAR(20) 
	 , CREATE_DATE TIMESTAMP NOT NULL
     , MOD_DATE TIMESTAMP NOT NULL
     , MOD_BY BIGINT NOT NULL
	 , PRIMARY KEY (SLIDER_TEXT_ID)
	 , CONSTRAINT FK_SLIDER_TEXT_1 FOREIGN KEY (SLIDER_ID)
                  REFERENCES SLIDER (SLIDER_ID)
);



DROP TABLE PAYMENT;
DROP TABLE PRODUCT;
DROP TABLE PURCHASE;
DROP TABLE FUND;
DROP TABLE SUPPLIER;
DROP TABLE PAYMENT_TYPE;


CREATE TABLE SUPPLIER (
	   SUPPLIER_ID BIGINT NOT NULL AUTO_INCREMENT
	 , NAME VARCHAR(150) NOT NULL
	 , CONTACT VARCHAR(100) 
     , PHONE VARCHAR(20) NOT NULL
     , EMAIL VARCHAR(50) 
     , ADDRESS VARCHAR(100)
     , STATUS TINYINT DEFAULT 0
	 , CREATE_DATE TIMESTAMP NOT NULL
     , MOD_DATE TIMESTAMP NOT NULL
     , MOD_BY BIGINT NOT NULL
	 , PRIMARY KEY (SUPPLIER_ID)
);

CREATE TABLE PAYMENT_TYPE (
	   PAYMENT_TYPE_ID BIGINT NOT NULL AUTO_INCREMENT
	 , NAME VARCHAR(100) NOT NULL
     , DESCRIPTION VARCHAR(1000) 
     , STATUS TINYINT DEFAULT 0
     , CREATE_DATE TIMESTAMP NOT NULL
     , MOD_DATE TIMESTAMP NOT NULL
     , MOD_BY BIGINT NOT NULL
	 , PRIMARY KEY (PAYMENT_TYPE_ID)
);

CREATE TABLE MONTH (
	   MONTH_ID BIGINT NOT NULL AUTO_INCREMENT
	 , NAME VARCHAR(100) NOT NULL
     , DESCRIPTION VARCHAR(1000) 
     , STATUS TINYINT DEFAULT 0
     , CREATE_DATE TIMESTAMP NOT NULL
     , MOD_DATE TIMESTAMP NOT NULL
     , MOD_BY BIGINT NOT NULL
	 , PRIMARY KEY (MONTH_ID)
);


CREATE TABLE CONTRACT_LABOR (
	   CONTRACT_LABOR_ID BIGINT NOT NULL AUTO_INCREMENT
	 , NAME VARCHAR(50) NOT NULL
     , CONTRACTOR_ID BIGINT NOT NULL
	 , CONTRACT_DATE DATE NOT NULL
     , AMOUNT DOUBLE NOT NULL
     , PAID DOUBLE NOT NULL
     , BALANCE DOUBLE NOT NULL
     , IMAGE VARCHAR(100)
     , DESCRIPTION VARCHAR(2000) 
     , STATUS TINYINT DEFAULT 0
     , CREATE_DATE TIMESTAMP NOT NULL
     , MOD_DATE TIMESTAMP NOT NULL
     , MOD_BY BIGINT NOT NULL
	 , PRIMARY KEY (CONTRACT_LABOR_ID)
     , CONSTRAINT FK_CONTRACT_LABOR_1 FOREIGN KEY (CONTRACTOR_ID)
                  REFERENCES EMPLOYEE (EMPLOYEE_ID)
);

CREATE TABLE PAYMENT (
	   PAYMENT_ID BIGINT NOT NULL AUTO_INCREMENT
	 , PAYMENT_TYPE_ID BIGINT NOT NULL
	 , PAYMENT_DATE DATE NOT NULL
	 , SALARY_YEAR SMALLINT,
	 , SALARY_MONTH BIGINT,
     , AMOUNT DOUBLE NOT NULL
     , RECEIVER_ID BIGINT NOT NULL
     , CONTRACT_LABOR_ID BIGINT
     , PAID_BY BIGINT NOT NULL
     , DESCRIPTION VARCHAR(1000) 
     , STATUS TINYINT DEFAULT 0
     , CREATE_DATE TIMESTAMP NOT NULL
     , MOD_DATE TIMESTAMP NOT NULL
     , MOD_BY BIGINT NOT NULL
	 , PRIMARY KEY (PAYMENT_ID)
     , CONSTRAINT FK_PAYMENT_1 FOREIGN KEY (PAYMENT_TYPE_ID)
                  REFERENCES PAYMENT_TYPE (PAYMENT_TYPE_ID)
	 , CONSTRAINT FK_PAYMENT_2 FOREIGN KEY (RECEIVER_ID)
                  REFERENCES EMPLOYEE (EMPLOYEE_ID)
	 , CONSTRAINT FK_PAYMENT_3 FOREIGN KEY (PAID_BY)
                  REFERENCES EMPLOYEE (EMPLOYEE_ID)
     , CONSTRAINT FK_PAYMENT_4 FOREIGN KEY (CONTRACT_LABOR_ID)
                  REFERENCES CONTRACT_LABOR (CONTRACT_LABOR_ID)
     , CONSTRAINT FK_PAYMENT_5 FOREIGN KEY (SALARY_MONTH)
                  REFERENCES MONTH (MONTH_ID)
);

CREATE TABLE PRODUCT (
	   PRODUCT_ID BIGINT NOT NULL AUTO_INCREMENT
	 , NAME VARCHAR(100) NOT NULL
     , DESCRIPTION VARCHAR(1000) 
     , STATUS TINYINT DEFAULT 0
     , CREATE_DATE TIMESTAMP NOT NULL
     , MOD_DATE TIMESTAMP NOT NULL
     , MOD_BY BIGINT NOT NULL
	 , PRIMARY KEY (PRODUCT_ID)
);

CREATE TABLE PURCHASE (
	   PURCHASE_ID BIGINT NOT NULL AUTO_INCREMENT
	 , PRODUCT_ID BIGINT NOT NULL
     , PRIMARY_PURCHASER_ID BIGINT NOT NULL
     , SECONDARY_PURCHASER_ID BIGINT
     , SUPPLIER_ID BIGINT
	 , PURCHASE_DATE DATE NOT NULL
     , UNIT_AMOUNT DOUBLE
     , QUANTITY BIGINT
     , TOTAL_AMOUNT DOUBLE NOT NULL
     , RECEIPT1 VARCHAR(100)
     , RECEIPT2 VARCHAR(100) 
     , RECEIPT3 VARCHAR(100) 
     , DESCRIPTION VARCHAR(2000) 
     , STATUS TINYINT DEFAULT 0
     , CREATE_DATE TIMESTAMP NOT NULL
     , MOD_DATE TIMESTAMP NOT NULL
     , MOD_BY BIGINT NOT NULL
	 , PRIMARY KEY (PURCHASE_ID)
     , CONSTRAINT FK_PURCHASE_1 FOREIGN KEY (PRODUCT_ID)
                  REFERENCES PRODUCT (PRODUCT_ID)
     , CONSTRAINT FK_PURCHASE_2 FOREIGN KEY (PRIMARY_PURCHASER_ID)
                  REFERENCES EMPLOYEE (EMPLOYEE_ID)
	 , CONSTRAINT FK_PURCHASE_3 FOREIGN KEY (SECONDARY_PURCHASER_ID)
                  REFERENCES EMPLOYEE (EMPLOYEE_ID)
	 , CONSTRAINT FK_PURCHASE_4 FOREIGN KEY (SUPPLIER_ID)
                  REFERENCES SUPPLIER (SUPPLIER_ID)
);

CREATE TABLE FUND (
	   FUND_ID BIGINT NOT NULL AUTO_INCREMENT
	 , RECEIVER_ID BIGINT
	 , AMOUNT DOUBLE
     , RECEPTION_DATE DATE NOT NULL
     , DESCRIPTION VARCHAR(2000) 
     , STATUS TINYINT DEFAULT 0
     , CREATE_DATE TIMESTAMP NOT NULL
     , MOD_DATE TIMESTAMP NOT NULL
     , MOD_BY BIGINT NOT NULL
	 , PRIMARY KEY (FUND_ID)
     , CONSTRAINT FK_FUND_1 FOREIGN KEY (RECEIVER_ID)
                  REFERENCES EMPLOYEE (EMPLOYEE_ID)
);

CREATE TABLE QUOTE (
	   QUOTE_ID BIGINT NOT NULL AUTO_INCREMENT
	 , NAME VARCHAR(250) NOT NULL
     , QUOTER_ID BIGINT NOT NULL
     , QUOTE_DATE DATE NOT NULL
     , DESCRIPTION VARCHAR(2000) 
     , STATUS TINYINT DEFAULT 0
     , CREATE_DATE TIMESTAMP NOT NULL
     , MOD_DATE TIMESTAMP NOT NULL
     , MOD_BY BIGINT NOT NULL
	 , PRIMARY KEY (QUOTE_ID)
     , CONSTRAINT FK_QUOTE_1 FOREIGN KEY (QUOTER_ID)
                  REFERENCES EMPLOYEE (EMPLOYEE_ID)
);


commit;

